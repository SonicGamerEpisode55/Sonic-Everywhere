name: Build Texture
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: vindocel/Dark-Everywhere
    - name: Get tag input
      id: get_tag_input
      uses: actions/input@v2
      with:
        name: tag_name
        message: 'Enter the tag name in the format v0.0.0'
    - name: Validate tag input
      run: |
        tag_regex='^v[0-9]+\.[0-9]+\.[0-9]+$'
        if [[ ! ${{ steps.get_tag_input.outputs.tag_name }} =~ $tag_regex ]]; then
          echo "Invalid tag format. Tag must be in the format v0.0.0"
          exit 1
        fi
    - name: Create Zip 
      run: |
        mkdir texture
        cp -r assets texture/
        cp pack.mcmeta texture/
        cp pack.png texture/
        cd texture
        zip -r ../Dark-Everywhere-${{ steps.get_tag_input.outputs.tag_name }}.zip *
        cd ..
        rm -r texture
    - name: Create Release
      if: steps.validate_tag_input.outputs.exit_code == '0'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag_input.outputs.tag_name }}
        release_name: Dark Everywhere ${{ steps.get_tag_input.outputs.tag_name }}ğŸŒ™
        draft: false
        prerelease: false
    - name: Upload to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Dark-Everywhere-${{ steps.get_tag_input.outputs.tag_name }}.zip
        asset_name: Dark-Everywhere-${{ steps.get_tag_input.outputs.tag_name }}.zip
